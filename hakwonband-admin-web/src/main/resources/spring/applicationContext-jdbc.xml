<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:/comp/env/jdbc/hakwonband" />
		<property name="resourceRef" value="true" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-mapperConfig.xml"/>
		<property name="typeAliasesPackage" value="hakwonband.admin.model" />
	</bean>

	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<property name="basePackage" value="hakwonband.admin.dao"></property><!-- dao 인터페이스,xml의 위치 -->
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>


	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- service의 method 이름이 아래와 같이 시작되면 트랜젝션 처리 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="execute*" read-only="false" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="create*" read-only="false" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="insert*" read-only="false" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="regist*" read-only="false" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="update*" read-only="false" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="delete*" read-only="false" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="proc*" read-only="false" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceOperation" expression="execution(* hakwonband.admin.*..*Service.*(..))"/>
		<aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice"/>
	</aop:config>

</beans>