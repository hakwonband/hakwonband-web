<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hakwonband.mobile.dao.MessageDAO">

	<!-- 사용자의 보낸 메세지 리스트 -->
	<select id="sendMessageList" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/* MessageDAO.sendMessageList */
		select
			a.message_no
			, c.hakwon_no
			, b.hakwon_name
			, b.logo_file_no
			, get_file_path(b.logo_file_no) as logo_file_path
			, a.title
			, a.preview_content
			, a.write_user_no
			, date_format(a.write_date, '%Y-%m-%d %p %h:%i') as write_date
			, date_format(a.send_date, '%Y-%m-%d %p %h:%i') as send_date
			, c.receive_no
			, c.receive_user_no
			, d.user_name as receive_user_name
		from
			tb_message a
			, tb_hakwon_info b
			, tb_message_receiver c
			, tb_user_info d
		where
			a.send_user_no = #{write_user_no}
			and a.message_no = c.message_no
			and c.hakwon_no = b.hakwon_no
			and c.receive_user_no = d.user_no
		order by
			a.message_no desc
		limit
			#{start_no}, #{page_scale}
		]]>
	</select>

	<!-- 사용자의 보낸 메세지 리스트 카운트 확인 -->
	<select id="sendMessageListTotCount" parameterType="dataMap" resultType="int">
	<![CDATA[
		/* MessageDAO.sendMessageListTotCount */
		select
			count(1)
		from
			tb_message a
			, tb_hakwon_info b
			, tb_message_receiver c
			, tb_user_info d
		where
			a.send_user_no = #{write_user_no}
			and a.message_no = c.message_no
			and c.hakwon_no = b.hakwon_no
			and c.receive_user_no = d.user_no
	]]>
	</select>

	<!-- 받은 메세지 리스트 -->
	<select id="receiveMessageList" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/* MessageDAO.receiveMessageList */
		select
			a.receive_no
			, a.message_no
			, b.send_user_no
			, date_format(b.send_date, '%Y-%m-%d %p %h:%i') as send_date
			, a.receive_user_no
			, date_format(a.receive_date, '%Y-%m-%d %p %h:%i') as receive_date
			, a.hakwon_no
			, b.title
			, b.preview_content
			, b.group_yn
			, c.user_type
			, case when a.hakwon_no = -1 then '관리자' else d.user_name end user_name
			, e.hakwon_name
			, e.logo_file_no
			, get_file_path(e.logo_file_no) as logo_file_path
		from
			tb_message_receiver a
				left join tb_hakwon_info e on a.hakwon_no = e.hakwon_no
			, tb_message b
			, tb_user c
			, tb_user_info d
		where
			a.receive_user_no = #{receive_user_no}
			and a.message_no = b.message_no
			and (b.reservation_yn = 'N' or b.reservation_send_date is not null)
			and b.send_user_no = c.user_no
			and c.user_no = d.user_no
		order by
			b.send_date desc
		limit
			#{start_no}, #{page_scale}
	]]>
	</select>

	<!-- 받은 메세지 리스트 카운트 -->
	<select id="receiveMessageListTotCount" parameterType="dataMap" resultType="int">
	<![CDATA[
		/* MessageDAO.receiveMessageListTotCount */
		select
			count(1)
		from
			tb_message_receiver a
			, tb_message b
		where
			a.receive_user_no = #{receive_user_no}
			and a.message_no = b.message_no
			and (b.reservation_yn = 'N' or b.reservation_send_date is not null)
	]]>
	</select>

	<!-- 사용자의 신규 메세지 리스트 -->
	<select id="newMessageList" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/* MessageDAO.newMessageList */
		select
			a.message_no
			, a.receive_no
			, b.send_user_no
			, date_format(b.send_date, '%Y-%m-%d %p %h:%i') as send_date
			, a.receive_user_no
			, date_format(a.receive_date, '%Y-%m-%d %p %h:%i') as receive_date
			, a.hakwon_no
			, b.title
			, b.preview_content
			, c.user_type
			, case when a.hakwon_no = -1 then '관리자' else d.user_name end user_name
			, a.hakwon_no
			, (select hakwon_name from tb_hakwon_info where hakwon_no = a.hakwon_no) as hakwon_name
		from
			tb_message_receiver a
			, tb_message b
			, tb_user c
			, tb_user_info d
		where
			a.receive_user_no = #{receive_user_no}
			and a.message_no = b.message_no
			and b.send_user_no = c.user_no
			and c.user_no = d.user_no
		order by
			a.message_no desc
		limit 3
	]]>
	</select>

	<!-- 보낸 메세지 상세조회 -->
	<select id="sendMessageDetail" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/* MessageDAO.sendMessageDetail */
		select
			b.receive_no
			, a.message_no
			, b.hakwon_no
			, a.title
			, a.content
			, a.write_user_no
			, a.group_yn
			, date_format(a.write_date, '%Y-%m-%d %p %h:%i') as write_date
			, get_user_info(a.send_user_no) as send_user_info
			, get_user_info(b.receive_user_no) as receive_user_info
		from
			tb_message a
			, tb_message_receiver b
		where
			b.receive_no = #{receive_no}
			and b.message_no = a.message_no
	]]>
	</select>

	<!-- 받은 메세지 상세조회 -->
	<select id="receiveMessageDetail" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/* MessageDAO.receiveMessageDetail */
		select
			e.receive_no
			, a.message_no
			, e.receive_no
			, e.hakwon_no
			, a.title
			, a.content
			, a.write_user_no
			, a.group_yn
			, date_format(a.write_date, '%Y-%m-%d %p %h:%i') as write_date
			, date_format(e.receive_date, '%Y-%m-%d %p %h:%i') as receive_date
			, get_user_info(a.send_user_no) as send_user_info
			, get_user_info(e.receive_user_no) as receive_user_info
		from
			tb_message a
			, tb_message_receiver e
		where
			e.receive_no = #{receive_no}
			and e.receive_user_no = #{user_no}
			and a.message_no = e.message_no
			and a.message_no = e.message_no
	]]>
	</select>

	<!-- 받은 메세지 상세조회시 받은날짜 업데이트 -->
	<update id="updateMessageReceiveDate" parameterType="dataMap">
	<![CDATA[
		update tb_message_receiver set
			receive_date = now()
		where
			receive_no = #{receive_no}
			and receive_user_no = #{user_no}
			and receive_date is null
	]]>
	</update>

	<!-- 메세지 등록 -->
	<insert id="messageInsert" parameterType="dataMap">
	<![CDATA[
		/*	MessageDAO.messageInsert	*/
		insert into tb_message (
			title
			, preview_content
			, content
			, group_yn
			, hakwon_no
			, send_user_no
			, send_date
			, write_user_no
			, write_date
		) values (
			#{title}
			, #{preview_content}
			, #{content}
			, #{group_yn}
			, #{hakwon_no}
			, #{write_user_no}
		  	, now()
			, #{write_user_no}
			, now()
		)
	]]>
	<selectKey keyProperty="idx" resultType="long">
		select last_insert_id()
	</selectKey>
	</insert>

	<!-- 보낸 메세지 receiver 테이블에 다중 등록 -->
	<insert id="messageReceiverMultiInsert" parameterType="java.util.List">
	<![CDATA[
		/* MessageDAO.messageReceiverMultiInsert */
		insert into tb_message_receiver (
			message_no, hakwon_no, receive_user_no
		) values
	]]>
		<foreach collection="list" item="item" separator=",">
	   (
			#{item.message_no}
			, #{item.hakwon_no}
			, #{item.receive_user_no}
	   )
		</foreach>
 	</insert>

	<!-- 메세지 받은 사용자 카운트 업데이트 -->
	<update id="updateMessageReceiverCount" parameterType="dataMap">
	<![CDATA[
		/* MessageDAO.updateMessageReceiverCount */
		update tb_message set
			receiver_count = (select count(1) from tb_message_receiver where message_no = #{message_no})
		where
			message_no = #{message_no}
	]]>
	</update>

	<!-- 메세지 사용자 정보 -->
	<select id="messageUserInfo" parameterType="dataMap" resultType="dataMap">
		/*	MessageDAO.messageUserInfo	*/
		select
			a.receive_user_no
			, (select user_type from tb_user where user_no = a.receive_user_no) as receive_user_type
			, b.send_user_no
			, (select user_type from tb_user where user_no = b.send_user_no) as send_user_type
			, b.hakwon_no
			, b.title
			, a.receive_no
		from
			tb_message_receiver a
			, tb_message b
		where
			a.receive_no = #{receive_no}
			and a.message_no = b.message_no
	</select>
</mapper>