<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hakwonband.hakwon.dao.FileDAO">

	<insert id="insertFile" parameterType="dataMap">
		/*	FileDAO.insertFile	*/
		insert into tb_file (
			file_parent_type, file_parent_no, file_name, save_file_name, file_size, file_ext_type
			, file_ext, file_path_prefix, file_path, image_yn, thumb_file_path
			, ip_address, reg_date, reg_user_no, file_use_yn, file_del_yn
		<if test=" @hakwonband.util.StringUtil@isNotNull( youtube_id ) ">
			, youtube_id, youtube_reg_date
		</if>
		) values(
			#{file_parent_type}, #{file_parent_no}, #{file_name}, #{save_file_name}, #{file_size}, #{file_ext_type}
			, #{file_ext}, #{file_path_prefix}, #{file_path}, #{image_yn}, #{thumb_file_path}
			, #{ip_address}, now(), #{user_no}, #{file_use_yn}, 'N'
		<if test=" @hakwonband.util.StringUtil@isNotNull( youtube_id ) ">
			, #{youtube_id}, now()
		</if>
		)
	<selectKey keyProperty="id" resultType="long">
		select last_insert_id()
	</selectKey>
	</insert>

	<!-- 파일들을 사용상태로 업데이트 -->
	<update id="usingUpdate" parameterType="dataMap">
	<![CDATA[
		/*	FileDAO.usingUpdate	*/
		update tb_file set
			file_parent_no = #{file_parent_no}
			, file_use_yn = 'Y'
		where
			file_no in (${file_no_list})
	]]>
		<if test="file_parent_type != 001 and user_type != 003">
			and reg_user_no = #{reg_user_no}
		</if>
	</update>

	<!-- 파일들을 미사용 상태로 업데이트 -->
	<update id="unUsingUpdate" parameterType="dataMap">
	<![CDATA[
		/*	FileDAO.unUsingUpdate	*/
		update tb_file set
			file_use_yn = 'N'
		where
			file_parent_no = #{file_parent_no}
			and file_parent_type = #{file_parent_type}
	]]>
		<if test="file_parent_type != 001 and user_type != 003">
			and reg_user_no = #{reg_user_no}
		</if>
	</update>


	<!-- 메세지 파일을 미사용 상태로 변경 -->
	<update id="unUsingMessageUpdate" parameterType="dataMap">
	<![CDATA[
		/*	FileDAO.unUsingMessageUpdate	*/
		update tb_file set
			file_use_yn = 'N'
		where
			file_parent_no = #{messageNo}
			and file_parent_type = '002'
			and reg_user_no = #{user_no}
	]]>
	</update>

	<!-- 파일상태 삭제로 변경 -->
	<update id="deleteFile" parameterType="dataMap">
	<![CDATA[
		/*	FileDAO.deleteFile	*/
		update
			tb_file
		set
			file_use_yn = 'N'
			, file_del_yn = 'Y'
		where
			file_no = #{file_no}
	]]>
	</update>

	<!-- 특정 컨텐츠의 파일 리스트 -->
	<select id="fileList" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/*	FileDAO.fileList	*/
		select
			a.file_no
			, a.file_parent_type
			, a.file_name
			, a.save_file_name
			, a.file_size
			, a.file_ext_type
			, a.file_ext_type as mime_type
			, a.file_ext
			, a.file_path_prefix
			, a.file_path
			, a.image_yn
			, a.thumb_file_path
			, date_format(a.reg_date, '%Y-%m-%d') as reg_date
			, a.youtube_id
		from
			tb_file a
		where
			a.file_parent_type = #{file_parent_type}
			and a.file_parent_no = #{file_parent_no}
			and a.file_use_yn = 'Y'
			and a.file_del_yn = 'N'
		order by
			a.file_no asc
	]]>
	</select>

	<!-- 특정 컨텐츠의 파일 리스트 -->
	<select id="fileList2" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/*	FileDAO.fileList2	*/
		select
			a.file_no as fileNo
			, a.file_parent_type as fileParentType
			, a.file_name as fileName
			, a.save_file_name as saveFileName
			, a.file_size as fileSize
			, a.file_ext_type as fileExtType
			, a.file_ext_type as mimeType
			, a.file_ext as fileExt
			, a.file_path_prefix filePathPrefix
			, a.file_path as filePath
			, a.image_yn as imageYn
			, a.thumb_file_path as thumbFilePath
			, date_format(a.reg_date, '%Y-%m-%d') as regDate
			, a.youtube_id
		from
			tb_file a
		where
			a.file_parent_type = #{file_parent_type}
			and a.file_parent_no = #{file_parent_no}
			and a.file_use_yn = 'Y'
			and a.file_del_yn = 'N'
		order by
			a.file_no asc
	]]>
	</select>

	<!-- 학원 로고 수정 -->
	<update id="updateHakwonLogo" parameterType="dataMap">
	<![CDATA[
		/* FileDAO.updateHakwonLogo */
		update tb_hakwon_info set
			logo_file_no = #{photo_file_no}
		where
			hakwon_no = #{hakwon_no}
			and hakwon_no = (select hakwon_no from tb_hakwon where hakwon_no = #{hakwon_no} and master_user_no = #{user_no})
	]]>
	</update>

	<!-- 학원 반 로고 수정 -->
	<update id="updateHakwonClassLogo" parameterType="dataMap">
	<![CDATA[
		/* FileDAO.updateHakwonClassLogo */
		update tb_hakwon_class set
			logo_file_no = #{photo_file_no}
		where
			hakwon_no = #{hakwon_no}
			and class_no = #{class_no}
			and (
				hakwon_no = (select hakwon_no from tb_hakwon where hakwon_no = #{hakwon_no} and master_user_no = #{user_no})
				or hakwon_no = (select hakwon_no from tb_hakwon_teacher where hakwon_no = #{hakwon_no} and user_no = #{user_no})
			)
	]]>
	</update>


</mapper>