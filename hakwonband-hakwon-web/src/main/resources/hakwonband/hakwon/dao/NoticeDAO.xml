<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hakwonband.hakwon.dao.NoticeDAO">

	<!-- 공지사항 리스트 -->
	<select id="noticeList" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/* noticeDAO.noticeList */
		select
			a.notice_no
			, a.notice_type
			, a.notice_parent_no
			, a.title
			, a.preview_content
			, a.reg_user_no
			, b.user_name as reg_user_name
			, date_format(a.reg_date, '%Y.%m.%d') as reg_date
			, a.udp_user_no
			, a.reply_yn
			, date_format(a.udp_date, '%Y.%m.%d') as udp_date
			, (select count(1) from tb_content_read where content_type = '001' and content_parent_no = a.notice_no and user_no = #{user_no}) as read_status
			, (select count(1) from tb_content_reply where content_type = '001' and content_parent_no = a.notice_no) as reply_count
			, a.reservation_yn
			, date_format(a.reservation_date, '%Y.%m.%d %H:%i') as reservation_date
			, a.reservation_send_date
		from
			tb_notice a,
			tb_user_info b
		where
			a.content_status = '001'
			and a.notice_type = #{notice_type}
			and a.reg_user_no = b.user_no
	]]>
		<if test="notice_type != '004' ">
			and a.notice_parent_no = #{notice_parent_no}
		</if>
		<if test="notice_type == '004' ">
			and a.reg_user_no = #{user_no}
		</if>
	<![CDATA[
		order by
			a.reg_date desc
		limit
			#{start_no}, #{page_scale}
	]]>
	</select>

	<!-- 공지사항 리스트 카운트 확인 -->
	<select id="noticeListTotCount" parameterType="dataMap" resultType="int">
	<![CDATA[
		/* noticeDAO.noticeListTotCount */
		select
			count(1)
		from
			tb_notice a
			, tb_user_info b
		where
			a.content_status = '001'
			and a.notice_type = #{notice_type}
			and a.reg_user_no = b.user_no
	]]>
		<if test="notice_type != '004' ">
			and a.notice_parent_no = #{notice_parent_no}
		</if>
		<if test="notice_type == '004' ">
			and a.reg_user_no = #{user_no}
		</if>
	</select>

	<!-- 공지사항 상세조회 -->
	<select id="noticeDetail" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/* noticeDAO.noticeDetail */
		select
			a.notice_no
			, a.notice_type
			, a.notice_parent_no
			, a.title
			, a.preview_content
			, a.content
			, a.reply_yn
			, a.reg_user_no
			, b.user_name as reg_user_name
			, date_format(a.reg_date, '%Y.%m.%d') as reg_date
			, a.udp_user_no
			, date_format(a.udp_date, '%Y.%m.%d') as udp_date
			, a.reservation_yn
			, date_format(a.reservation_date, '%Y.%m.%d %H:%i') as reservation_date
			, date_format(a.reservation_date, '%Y-%m-%d') as reservation_date_1
			, date_format(a.reservation_date, '%H:%i') as reservation_date_2
			, a.reservation_send_date
		from
			tb_notice a
			, tb_user_info b
		where
			a.notice_no = #{notice_no}
			and a.content_status = '001'
			and a.reg_user_no = b.user_no
	]]>
		<if test="notice_type == '004' ">
			and a.notice_type = #{notice_type}
			and a.reg_user_no = #{user_no}
		</if>
	</select>

	<!-- 학원 공지사항 등록 -->
	<insert id="noticeInsert" parameterType="dataMap">
	<![CDATA[
		/*	noticeDAO.noticeInsert	*/
		insert into tb_notice (
			notice_type
			, notice_parent_no
			, title
			, preview_content
			, content
			, content_status
			, reply_yn
			, reg_user_no
			, reg_date
			, reservation_yn
			, reservation_date
		) values (
			#{notice_type}
			, #{notice_parent_no}
			, #{title}
			, #{preview_content}
			, #{content}
			, '001'
			, #{reply_yn}
			, #{reg_user_no}
			, now()
			, #{reservationYn}
	]]>
		<if test="reservationYn eq 'Y'.toString()">
			, str_to_date(#{reservationDate}, '%Y-%m-%d %H:%i')
		</if>
		<if test="reservationYn eq 'N'.toString()">
			, null
		</if>
		)
	<selectKey keyProperty="idx" resultType="long">
		select last_insert_id()
	</selectKey>
	</insert>

	<!-- 공지사항 내용 수정 -->
	<update id="noticeUpdate" parameterType="dataMap">
	<![CDATA[
		/*	noticeDAO.noticeUpdate	*/
		update tb_notice set
	]]>
			udp_user_no = #{udp_user_no}
			, udp_date	= now()
			<if test="@hakwonband.util.StringUtil@isNotNull( title )">
				, title = #{title}
			</if>
			<if test="@hakwonband.util.StringUtil@isNotNull( preview_content )">
				, preview_content = #{preview_content}
			</if>
			<if test="@hakwonband.util.StringUtil@isNotNull( content )">
				, content = #{content}
			</if>
			<if test="@hakwonband.util.StringUtil@isNotNull( reply_yn )">
				, reply_yn = #{reply_yn}
			</if>
				, reservation_yn = #{reservationYn}
			<if test="reservationYn eq 'Y'.toString()">
				, reservation_date = str_to_date(#{reservationDate}, '%Y-%m-%d %H:%i')
			</if>
			<if test="reservationYn eq 'N'.toString()">
				, reservation_date = null
			</if>
	<![CDATA[
		where
			notice_no = #{notice_no}
	]]>
		<if test="@hakwonband.util.StringUtil@isNotBlank( user_type ) and user_type == 004">
			and reg_user_no = #{user_no}
		</if>
	</update>

	<!-- 공지사항 삭제 -->
	<update id="noticeDelete" parameterType="dataMap">
	<![CDATA[
		/* noticeDAO.noticeDelete */
		update tb_notice set
			content_status	= '002'
			, udp_user_no	= #{user_no}
			, udp_date		= now()
		where
			notice_no = #{notice_no}
	]]>
		<if test="user_type != 003">
			and reg_user_no = #{user_no}
		</if>
	</update>

	<!-- 반 공지사항 읽은 사용자 조회 -->
	<select id="classNoticeReaderList" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/* noticeDAO.classNoticeReaderList */
		select
			a.student_user_no
			, a.hakwon_no
			, a.class_no
			, get_file_path(b.photo_file_no) as user_photo_path
			, b.user_name
			, b.user_id
			, (select date_format(x.read_date, '%Y.%m.%d %H:%i') from tb_content_read x where x.content_type = '001' and x.content_parent_no = #{notice_no} and a.student_user_no = x.user_no) as read_date
			, '006' as user_type
			, ''  as child_list
		from
			tb_hakwon_class_student a
			, tb_user_info b
		where
			a.class_no = #{class_no}
			and a.student_user_no = b.user_no
		union
		select
			distinct b.parent_user_no
			, a.hakwon_no
			, a.class_no
			, get_file_path(c.photo_file_no) as user_photo_path
			, c.user_name
			, c.user_id
			, (select date_format(x.read_date, '%Y.%m.%d %H:%i') from tb_content_read x where x.content_type = '001' and x.content_parent_no = #{notice_no} and b.parent_user_no = x.user_no) as read_date
			, '005' as user_type
			, (select group_concat(y.user_name) from tb_student_parent x, tb_user_info y, tb_student_school z where x.parent_user_no = b.parent_user_no and x.student_user_no = y.user_no and x.student_user_no = z.user_no) as child_list
		from
			tb_hakwon_class_student a
			, tb_student_parent b
			, tb_user_info c
		where
			a.class_no = #{class_no}
			and a.student_user_no = b.student_user_no
			and b.parent_user_no = c.user_no
	]]>
	</select>
</mapper>