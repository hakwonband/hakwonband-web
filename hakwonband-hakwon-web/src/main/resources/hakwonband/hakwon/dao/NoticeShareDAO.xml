<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hakwonband.hakwon.dao.NoticeShareDAO">

	<!-- 공지 공유 등록 -->
	<insert id="shareInsert" parameterType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.shareInsert	*/
		insert into tb_notice_share (
			send_hakwon_no, reg_user_no, notice_type, parent_no, receive_hakwon_no, start_date, end_date, reg_date, udp_date
		) values (
			#{send_hakwon_no}, #{user_no}, #{notice_type}, #{parent_no}, #{receive_hakwon_no}, str_to_date(#{start_date}, '%Y-%m-%d'), str_to_date(#{end_date}, '%Y-%m-%d'), now(), now()
		)
	]]>
	<selectKey keyProperty="idx" resultType="long">
		select last_insert_id()
	</selectKey>
	</insert>

	<!-- 공유한 리스트 -->
	<select id="sendList" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.sendList	*/
		select
			a.share_no
			, a.send_hakwon_no
			, a.reg_user_no
			, a.notice_type
			, a.parent_no
			, a.receive_hakwon_no
			, date_format(a.start_date,'%Y-%m-%d') as start_date
			, date_format(a.end_date,'%Y-%m-%d') as end_date
			, a.reg_date
			, a.udp_date
			, b.hakwon_name
			, '학원공지' as class_title
			, case when date(now()) between date(a.start_date) and date(a.end_date) then 'Y'
				else 'N' end as use_yn
		from
			tb_notice_share a
			, tb_hakwon b
		where
			a.send_hakwon_no = #{hakwon_no}
			and a.reg_user_no = #{user_no}
			and a.notice_type = '002'
			and a.receive_hakwon_no = b.hakwon_no
	]]>
		<if test="@hakwonband.util.StringUtil@isNotNull( searchText )">
			and b.hakwon_name like concat('%', #{searchText}, '%')
		</if>
	<![CDATA[
		union all
		select
			a.share_no
			, a.send_hakwon_no
			, a.reg_user_no
			, a.notice_type
			, a.parent_no
			, a.receive_hakwon_no
			, date_format(a.start_date,'%Y-%m-%d') as start_date
			, date_format(a.end_date,'%Y-%m-%d') as end_date
			, a.reg_date
			, a.udp_date
			, b.hakwon_name
			, hakwon_class.class_title as class_title
			, case when date(now()) between date(a.start_date) and date(a.end_date) then 'Y'
				else 'N' end as use_yn
		from
			tb_notice_share a left join tb_hakwon_class hakwon_class on a.parent_no = hakwon_class.class_no
			, tb_hakwon b
		where
			a.send_hakwon_no = #{hakwon_no}
			and a.reg_user_no = #{user_no}
			and a.notice_type = '003'
			and a.receive_hakwon_no = b.hakwon_no
	]]>
		<if test="@hakwonband.util.StringUtil@isNotNull( searchText )">
			and (
				b.hakwon_name like concat('%', #{searchText}, '%')
				or hakwon_class.class_title like concat('%', #{searchText}, '%')
			)
		</if>
		limit
			#{start_no}, #{page_scale}
	</select>

	<!-- 공유한 리스트 카운트 -->
	<select id="sendListTotCount" parameterType="dataMap" resultType="int">
	<![CDATA[
		/*	NoticeShareDAO.sendListTotCount	*/
		select sum(tot.cnt)
		from (
			select
				count(1) as cnt
			from
				tb_notice_share a
				, tb_hakwon b
			where
				a.send_hakwon_no = #{hakwon_no}
				and a.reg_user_no = #{user_no}
				and a.notice_type = '002'
				and a.receive_hakwon_no = b.hakwon_no
	]]>
		<if test="@hakwonband.util.StringUtil@isNotNull( searchText )">
			and b.hakwon_name like concat('%', #{searchText}, '%')
		</if>
	<![CDATA[
			union all
			select
				count(1) as cnt
			from
				tb_notice_share a
				, tb_hakwon b
				, tb_hakwon_class hakwon_class
			where
				a.send_hakwon_no = #{hakwon_no}
				and a.reg_user_no = #{user_no}
				and a.notice_type = '003'
				and a.receive_hakwon_no = b.hakwon_no
				and b.hakwon_no = hakwon_class.hakwon_no
				and a.parent_no = hakwon_class.class_no
	]]>
		<if test="@hakwonband.util.StringUtil@isNotNull( searchText )">
				and (
					b.hakwon_name like concat('%', #{searchText}, '%')
					or hakwon_class.class_title like concat('%', #{searchText}, '%')
				)
		</if>
		) tot
	</select>

	<!-- 학원 공유한 리스트 -->
	<select id="hakwonSendList" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.hakwonSendList	*/
		select
			a.share_no
			, a.send_hakwon_no
			, a.reg_user_no
			, a.notice_type
			, a.parent_no
			, a.receive_hakwon_no
			, date_format(a.start_date,'%Y-%m-%d') as start_date
			, date_format(a.end_date,'%Y-%m-%d') as end_date
			, a.reg_date
			, a.udp_date
			, b.hakwon_name
			, case when a.notice_type = '002' then '학원공지'
				when a.notice_type = '003' then (select class_title from tb_hakwon_class where class_no = a.parent_no)
				else '' end class_title
			, case when date(now()) between date(a.start_date) and date(a.end_date) then 'Y'
				else 'N' end as use_yn
		from
			tb_notice_share a
			, tb_hakwon b
		where
			a.send_hakwon_no = #{hakwon_no}
			and a.reg_user_no = #{user_no}
			and a.notice_type = '002'
			and a.receive_hakwon_no = b.hakwon_no
	]]>
		<if test="@hakwonband.util.StringUtil@isNotNull( searchText )">
			and b.hakwon_name like concat('%', #{searchText}, '%')
		</if>
	<![CDATA[
		limit
			#{start_no}, #{page_scale}
	]]>
	</select>

	<select id="hakwonSendListTotCount" parameterType="dataMap" resultType="int">
	<![CDATA[
		/*	NoticeShareDAO.hakwonSendListTotCount	*/
		select
			count(1)
		from
			tb_notice_share a
			, tb_hakwon b
		where
			a.send_hakwon_no = #{hakwon_no}
			and a.reg_user_no = #{user_no}
			and a.notice_type = '002'
			and a.receive_hakwon_no = b.hakwon_no
	]]>
		<if test="@hakwonband.util.StringUtil@isNotNull( searchText )">
			and b.hakwon_name like concat('%', #{searchText}, '%')
		</if>
	</select>

	<!-- 학원 반 공유한 리스트 -->
	<select id="classSendList" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.classSendList	*/
		select
			a.share_no
			, a.send_hakwon_no
			, a.reg_user_no
			, a.notice_type
			, a.parent_no
			, a.receive_hakwon_no
			, date_format(a.start_date,'%Y-%m-%d') as start_date
			, date_format(a.end_date,'%Y-%m-%d') as end_date
			, a.reg_date
			, a.udp_date
			, b.hakwon_name
			, hakwon_class.class_title as class_title
			, case when date(now()) between date(a.start_date) and date(a.end_date) then 'Y'
				else 'N' end as use_yn
		from
			tb_notice_share a
			, tb_hakwon b
			, tb_hakwon_class hakwon_class
		where
			a.send_hakwon_no = #{hakwon_no}
			and a.reg_user_no = #{user_no}
			and a.notice_type = '003'
			and a.receive_hakwon_no = b.hakwon_no
			and b.hakwon_no = hakwon_class.hakwon_no
			and a.parent_no = hakwon_class.class_no
	]]>
		<if test="@hakwonband.util.StringUtil@isNotNull( searchText )">
			and (
				b.hakwon_name like concat('%', #{searchText}, '%')
				or hakwon_class.class_title like concat('%', #{searchText}, '%')
			)
		</if>
	<![CDATA[
		limit
			#{start_no}, #{page_scale}
	]]>
	</select>

	<select id="classSendListTotCount" parameterType="dataMap" resultType="int">
	<![CDATA[
		/*	NoticeShareDAO.classSendListTotCount	*/
		select
			count(1)
		from
			tb_notice_share a
			, tb_hakwon b
			, tb_hakwon_class hakwon_class
		where
			a.send_hakwon_no = #{hakwon_no}
			and a.reg_user_no = #{user_no}
			and a.notice_type = '003'
			and a.receive_hakwon_no = b.hakwon_no
			and b.hakwon_no = hakwon_class.hakwon_no
			and a.parent_no = hakwon_class.class_no
	]]>
		<if test="@hakwonband.util.StringUtil@isNotNull( searchText )">
			and (
				b.hakwon_name like concat('%', #{searchText}, '%')
				or hakwon_class.class_title like concat('%', #{searchText}, '%')
			)
		</if>
	</select>

	<!-- 공유 받은 리스트 -->
	<select id="receiveList" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.receiveList	*/
		select
			a.share_no
			, a.send_hakwon_no
			, a.reg_user_no
			, a.notice_type
			, a.parent_no
			, a.receive_hakwon_no
			, date_format(a.start_date,'%Y-%m-%d') as start_date
			, date_format(a.end_date,'%Y-%m-%d') as end_date
			, a.reg_date
			, a.udp_date
			, b.hakwon_name
			, case when a.notice_type = '002' then '학원공지'
				when a.notice_type = '003' then (select class_title from tb_hakwon_class where class_no = a.parent_no)
				else '' end class_title
			, case when date(now()) between date(a.start_date) and date(a.end_date) then 'Y'
				else 'N' end as use_yn
		from
			tb_notice_share a
			, tb_hakwon b
		where
			a.receive_hakwon_no = #{hakwon_no}
			and a.send_hakwon_no = b.hakwon_no
		limit
			#{start_no}, #{page_scale}
	]]>
	</select>

	<!-- 공유 받은 리스트 카운트 -->
	<select id="receiveListTotCount" parameterType="dataMap" resultType="int">
	<![CDATA[
		/*	NoticeShareDAO.receiveListTotCount	*/
		select
			count(1)
		from
			tb_notice_share a
			, tb_hakwon b
		where
			a.receive_hakwon_no = #{hakwon_no}
			and a.send_hakwon_no = b.hakwon_no
	]]>
	</select>


	<!-- 학원 공유 체크 -->
	<select id="checkShareCount" parameterType="dataMap" resultType="int">
	<![CDATA[
		/*	NoticeShareDAO.checkShareCount	*/
		select
			count(1)
		from
			tb_notice_share a
		where
			send_hakwon_no = #{send_hakwon_no}
			and notice_type = #{notice_type}
			and parent_no = #{parent_no}
			and receive_hakwon_no = #{receive_hakwon_no}
			and reg_user_no = #{user_no}
	]]>
	</select>

	<update id="updateShare" parameterType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.updateShare	*/
		update tb_notice_share set
			start_date = str_to_date(#{start_date}, '%Y-%m-%d')
			, end_date = str_to_date(#{end_date}, '%Y-%m-%d')
			, udp_date = now()
		where
			send_hakwon_no = #{send_hakwon_no}
			and notice_type = #{notice_type}
			and parent_no = #{parent_no}
			and receive_hakwon_no = #{receive_hakwon_no}
			and reg_user_no = #{user_no}
	]]>
	</update>

	<!-- 공유 수정 -->
	<update id="updateShareDate" parameterType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.updateShareDate	*/
		update tb_notice_share set
			start_date = str_to_date(#{start_date}, '%Y-%m-%d')
			, end_date = str_to_date(#{end_date}, '%Y-%m-%d')
			, udp_date = now()
		where
			share_no = #{share_no}
			and reg_user_no = #{user_no}
	]]>
	</update>

	<!-- 공유 삭제 -->
	<delete id="deleteReceiveShare" parameterType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.deleteReceiveShare	*/
		delete from tb_notice_share
		where
			share_no = #{share_no}
			and receive_hakwon_no = (select hakwon_no from tb_hakwon where hakwon_no = #{receive_hakwon_no} and master_user_no = #{user_no})
	]]>
	</delete>

	<!-- 공유 삭제 -->
	<delete id="deleteSendShare" parameterType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.deleteSendShare	*/
		delete from tb_notice_share
		where
			share_no = #{share_no}
			and reg_user_no = #{user_no}
	]]>
	</delete>

	<!-- 공유된 공지 삭제 -->
	<delete id="deleteShareNotice" parameterType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.deleteShareNotice	*/
		delete from tb_notice
		where
			share_no = #{share_no}
	]]>
	</delete>

	<!-- 공유 정보 -->
	<select id="sendInfo" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.sendInfo	*/
		select
			a.share_no
			, a.send_hakwon_no
			, a.reg_user_no
			, a.notice_type
			, a.parent_no
			, a.receive_hakwon_no
			, date_format(a.start_date,'%Y-%m-%d') as start_date
			, date_format(a.end_date,'%Y-%m-%d') as end_date
			, case when date(now()) between date(a.start_date) and date(a.end_date) then 'Y'
				else 'N' end as use_yn
			, a.reg_date
			, a.udp_date
			, case when notice_type = '002' then (select count(1) from tb_hakwon where hakwon_no = #{target_class} and master_user_no = #{user_no})
				when notice_type = '003' then (select count(1) from tb_hakwon x, tb_hakwon_class y where x.hakwon_no = #{hakwon_no} and x.master_user_no = #{user_no} and x.hakwon_no = y.hakwon_no and y.class_no = #{target_class})
				else -1 end as class_check_count
		from
			tb_notice_share a
		where
			a.share_no = #{share_no}
			and a.receive_hakwon_no = (select hakwon_no from tb_hakwon where hakwon_no = #{hakwon_no} and master_user_no = #{user_no})
	]]>
	</select>


	<!-- 공유 받은 공지 리스트 -->
	<select id="shareNoticeList" parameterType="dataMap" resultType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.shareNoticeList	*/
		select
			b.notice_no
			, (
				select count(1)
				from tb_notice
				where
					notice_type = b.notice_type
					and notice_parent_no = #{target_class}
					and rel_notice_no = b.notice_no
			) as update_check
			, b.title
			, b.preview_content
			, b.content
			, b.reply_yn
		from
			tb_notice_share a
			, tb_notice b
		where
			a.share_no = #{share_no}
			and a.notice_type = b.notice_type
			and a.parent_no = b.notice_parent_no
			and b.reservation_yn = 'N'
			and b.content_status = '001'
			and b.share_no is null
		order by
			b.reg_date asc
	]]>
	</select>

	<!-- 학원 공지사항 등록 -->
	<insert id="noticeInsert" parameterType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.noticeInsert	*/
		insert into tb_notice (
			notice_type
			, notice_parent_no
			, title
			, preview_content
			, content
			, content_status
			, reply_yn
			, reg_user_no
			, reg_date
			, reservation_yn
			, reservation_date
			, rel_notice_no
			, share_no
		) values (
			#{notice_type}
			, #{notice_parent_no}
			, #{title}
			, #{preview_content}
			, #{content}
			, '001'
			, #{reply_yn}
			, #{reg_user_no}
			, now()
			, 'N'
			, null
			, #{rel_notice_no}
			, #{share_no}
		)
	]]>
	</insert>

	<!-- 공지사항 내용 수정 -->
	<update id="noticeUpdate" parameterType="dataMap">
	<![CDATA[
		/*	NoticeShareDAO.noticeUpdate	*/
		update tb_notice set
			udp_user_no = #{udp_user_no}
			, udp_date	= now()
			, title = #{title}
			, preview_content = #{preview_content}
			, content = #{content}
		where
			rel_notice_no = #{rel_notice_no}
			and share_no = #{share_no}
	]]>
	</update>
</mapper>